<?xml version="1.0" encoding="UTF-8"?>
<coverage>
<block classname='co.com.nequi.ArchitectureTest$1' method='test(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='5'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$1' method='test(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$1' method='test(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$1' method='test(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$1' method='test(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='importClasses()V' number='6'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='importClasses()V' number='5'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='importClasses()V' number='8'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='importClasses()V' number='7'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='importClasses()V' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='importClasses()V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='importClasses()V' number='4'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='importClasses()V' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='6'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotBeNamedWithToolNames$7(Lcom/tngtech/archunit/lang/ArchRule;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='5'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='importClasses()V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotBeNamedWithToolNames$7(Lcom/tngtech/archunit/lang/ArchRule;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='8'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='7'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='4'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='checkWithWarning(Ljava/lang/Runnable;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='checkWithWarning(Ljava/lang/Runnable;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotBeNamedWithToolNames$5(Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;Ljava/lang/String;)Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotBeNamedWithToolNames$5(Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;Ljava/lang/String;)Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotBeNamedWithToolNames$5(Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;Ljava/lang/String;)Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='checkWithWarning(Ljava/lang/Runnable;)V' number='7'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$JavaFile' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$JavaFile' method='&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='&lt;clinit&gt;()V' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='&lt;init&gt;(Ljava/util/Map;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='&lt;init&gt;(Ljava/util/Map;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='&lt;init&gt;()V' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='15'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='10'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='9'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='12'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils' method='findFiles()Ljava/util/Map;' number='11'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='13'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='14'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='15'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$1' method='&lt;init&gt;(Ljava/lang/String;[Ljava/lang/Object;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithToolNames()V' number='8'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$1' method='&lt;init&gt;(Ljava/lang/String;[Ljava/lang/Object;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithToolNames()V' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithToolNames()V' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithToolNames()V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithToolNames()V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='4'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithToolNames()V' number='7'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithToolNames()V' number='6'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithToolNames()V' number='5'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithToolNames()V' number='4'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='9'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='10'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='11'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='12'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='5'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='6'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='7'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$1' method='visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;' number='8'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotHaveFieldsNamedWithToolNames$8(Lcom/tngtech/archunit/lang/syntax/elements/MembersShouldConjunction;Ljava/lang/String;)Lcom/tngtech/archunit/lang/syntax/elements/MembersShouldConjunction;' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotHaveFieldsNamedWithToolNames$8(Lcom/tngtech/archunit/lang/syntax/elements/MembersShouldConjunction;Ljava/lang/String;)Lcom/tngtech/archunit/lang/syntax/elements/MembersShouldConjunction;' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotHaveFieldsNamedWithToolNames$8(Lcom/tngtech/archunit/lang/syntax/elements/MembersShouldConjunction;Ljava/lang/String;)Lcom/tngtech/archunit/lang/syntax/elements/MembersShouldConjunction;' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotHaveFieldsNamedWithToolNames()V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotHaveFieldsNamedWithToolNames()V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotHaveFieldsNamedWithToolNames$10(Lcom/tngtech/archunit/lang/ArchRule;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotHaveFieldsNamedWithToolNames$10(Lcom/tngtech/archunit/lang/ArchRule;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotHaveFieldsNamedWithToolNames()V' number='8'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotHaveFieldsNamedWithToolNames()V' number='7'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotHaveFieldsNamedWithToolNames()V' number='6'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotHaveFieldsNamedWithToolNames()V' number='5'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotHaveFieldsNamedWithToolNames()V' number='4'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotHaveFieldsNamedWithToolNames()V' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotHaveFieldsNamedWithToolNames()V' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotHaveFieldsNamedWithToolNames()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='useCaseFinalFields()V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='useCaseFinalFields()V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='useCaseFinalFields()V' number='8'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='useCaseFinalFields()V' number='7'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='useCaseFinalFields()V' number='6'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='useCaseFinalFields()V' number='5'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='useCaseFinalFields()V' number='4'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='useCaseFinalFields()V' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='useCaseFinalFields()V' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:useCaseFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='6'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='5'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='8'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='7'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='10'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$beansShouldOnlyHaveFinalFields$11(Lcom/tngtech/archunit/lang/ArchRule;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='9'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='12'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='11'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$beansShouldOnlyHaveFinalFields$11(Lcom/tngtech/archunit/lang/ArchRule;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='14'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='13'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='16'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='15'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='18'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='17'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='4'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beansShouldOnlyHaveFinalFields()V' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:beansShouldOnlyHaveFinalFields()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='10'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='9'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='areUsingAnAwsClient()Lcom/tngtech/archunit/base/DescribedPredicate;' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='withPredicate(Ljava/lang/String;Lco/com/nequi/ArchitectureTest$TestPredicate;)Lcom/tngtech/archunit/base/DescribedPredicate;' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='withPredicate(Ljava/lang/String;Lco/com/nequi/ArchitectureTest$TestPredicate;)Lcom/tngtech/archunit/base/DescribedPredicate;' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='areUsingAnAwsClient()Lcom/tngtech/archunit/base/DescribedPredicate;' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$3' method='&lt;init&gt;(Lco/com/nequi/ArchitectureTest;Ljava/lang/String;[Ljava/lang/Object;Lco/com/nequi/ArchitectureTest$CheckCondition;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$3' method='&lt;init&gt;(Lco/com/nequi/ArchitectureTest;Ljava/lang/String;[Ljava/lang/Object;Lco/com/nequi/ArchitectureTest$CheckCondition;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$12(Lcom/tngtech/archunit/core/domain/Dependency;)Z' number='11'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$12(Lcom/tngtech/archunit/core/domain/Dependency;)Z' number='10'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beAwsAsyncClient()Lcom/tngtech/archunit/lang/ArchCondition;' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$12(Lcom/tngtech/archunit/core/domain/Dependency;)Z' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='4'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='beAwsAsyncClient()Lcom/tngtech/archunit/lang/ArchCondition;' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='6'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$12(Lcom/tngtech/archunit/core/domain/Dependency;)Z' number='4'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='5'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$12(Lcom/tngtech/archunit/core/domain/Dependency;)Z' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='8'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$12(Lcom/tngtech/archunit/core/domain/Dependency;)Z' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='reactiveFlowsShouldUseAwsAsyncClients()V' number='7'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$12(Lcom/tngtech/archunit/core/domain/Dependency;)Z' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='withCondition(Ljava/lang/String;Lco/com/nequi/ArchitectureTest$CheckCondition;)Lcom/tngtech/archunit/lang/ArchCondition;' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='withCondition(Ljava/lang/String;Lco/com/nequi/ArchitectureTest$CheckCondition;)Lcom/tngtech/archunit/lang/ArchCondition;' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$reactiveFlowsShouldUseAwsAsyncClients$1(Lcom/tngtech/archunit/lang/ArchRule;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$reactiveFlowsShouldUseAwsAsyncClients$1(Lcom/tngtech/archunit/lang/ArchRule;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$2' method='test(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$2' method='test(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$2' method='&lt;init&gt;(Lco/com/nequi/ArchitectureTest;Ljava/lang/String;[Ljava/lang/Object;Lco/com/nequi/ArchitectureTest$TestPredicate;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$13(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest$2' method='&lt;init&gt;(Lco/com/nequi/ArchitectureTest;Ljava/lang/String;[Ljava/lang/Object;Lco/com/nequi/ArchitectureTest$TestPredicate;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$13(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$13(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$areUsingAnAwsClient$13(Lcom/tngtech/archunit/core/domain/JavaClass;)Z' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:reactiveFlowsShouldUseAwsAsyncClients()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithTechSuffixes()V' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithTechSuffixes()V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithTechSuffixes()V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithTechSuffixes()V' number='6'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithTechSuffixes()V' number='5'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithTechSuffixes()V' number='4'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithTechSuffixes()V' number='3'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithTechSuffixes()V' number='8'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='domainClassesShouldNotBeNamedWithTechSuffixes()V' number='7'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotBeNamedWithTechSuffixes$2(Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;Ljava/lang/String;)Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;' number='2'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotBeNamedWithTechSuffixes$2(Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;Ljava/lang/String;)Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotBeNamedWithTechSuffixes$2(Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;Ljava/lang/String;)Lcom/tngtech/archunit/lang/syntax/elements/ClassesShouldConjunction;' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotBeNamedWithTechSuffixes$4(Lcom/tngtech/archunit/lang/ArchRule;)V' number='0'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$domainClassesShouldNotBeNamedWithTechSuffixes$4(Lcom/tngtech/archunit/lang/ArchRule;)V' number='1'><tests>
<test name='co.com.nequi.ArchitectureTest.[engine:junit-jupiter]/[class:co.com.nequi.ArchitectureTest]/[method:domainClassesShouldNotBeNamedWithTechSuffixes()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig' method='objectMapper()Lorg/reactivecommons/utils/ObjectMapper;' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig' method='objectMapper()Lorg/reactivecommons/utils/ObjectMapper;' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$0' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='5'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$0' method='&lt;init&gt;(Ljava/lang/Class;)V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$0' method='&lt;init&gt;(Ljava/lang/Class;)V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$SET_STATIC_CALLBACKS([Lorg/springframework/cglib/proxy/Callback;)V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='2'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='4'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$BIND_CALLBACKS(Ljava/lang/Object;)V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='&lt;clinit&gt;()V' number='2'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='3'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='&lt;clinit&gt;()V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='6'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='&lt;clinit&gt;()V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='5'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='invoke(ILjava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='8'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='7'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$BIND_CALLBACKS(Ljava/lang/Object;)V' number='3'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='10'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$BIND_CALLBACKS(Ljava/lang/Object;)V' number='2'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK1()V' number='9'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$BIND_CALLBACKS(Ljava/lang/Object;)V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$exportIssues$0(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/String;)V' number='8'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$BIND_CALLBACKS(Ljava/lang/Object;)V' number='6'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='invoke(ILjava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;' number='7'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$BIND_CALLBACKS(Ljava/lang/Object;)V' number='5'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='invoke(ILjava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;' number='8'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$exportIssues$0(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/String;)V' number='5'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$exportIssues$0(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/String;)V' number='4'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$exportIssues$0(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/String;)V' number='3'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$exportIssues$0(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/String;)V' number='2'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$exportIssues$0(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/String;)V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='lambda$exportIssues$0(Lcom/fasterxml/jackson/databind/ObjectMapper;Ljava/lang/String;)V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$IssuesReport' method='&lt;init&gt;()V' number='2'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$IssuesReport' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$IssuesReport' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='exportIssues()V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='exportIssues()V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='exportIssues()V' number='3'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='exportIssues()V' number='2'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfigTest' method='testObjectMapperBean()V' number='4'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfigTest' method='testObjectMapperBean()V' number='5'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$objectMapper$0()Lorg/reactivecommons/utils/ObjectMapper;' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$objectMapper$0()Lorg/reactivecommons/utils/ObjectMapper;' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='2'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfigTest' method='testObjectMapperBean()V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfigTest' method='testObjectMapperBean()V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfigTest' method='testObjectMapperBean()V' number='2'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.ArchitectureTest' method='exportIssues()V' number='6'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfigTest' method='testObjectMapperBean()V' number='3'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='objectMapper()Lorg/reactivecommons/utils/ObjectMapper;' number='4'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V' number='4'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='objectMapper()Lorg/reactivecommons/utils/ObjectMapper;' number='5'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V' number='3'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='objectMapper()Lorg/reactivecommons/utils/ObjectMapper;' number='3'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V' number='5'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='CGLIB$STATICHOOK2()V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='objectMapper()Lorg/reactivecommons/utils/ObjectMapper;' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.Utils$IssuesReport' method='getIssues()Ljava/util/concurrent/ConcurrentLinkedQueue;' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='setBeanFactory(Lorg/springframework/beans/factory/BeanFactory;)V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfigTest' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfigTest' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='&lt;init&gt;()V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='&lt;init&gt;()V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='26'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='25'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='24'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$0' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='4'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$0' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='3'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$0' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='2'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$0' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$0' method='getIndex(Lorg/springframework/cglib/core/Signature;)I' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='&lt;init&gt;(Ljava/lang/Class;)V' number='1'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$0' method='&lt;init&gt;()V' number='2'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
<block classname='co.com.nequi.config.ObjectMapperConfig$$SpringCGLIB$$FastClass$$1' method='&lt;init&gt;(Ljava/lang/Class;)V' number='0'><tests>
<test name='co.com.nequi.config.ObjectMapperConfigTest.[engine:junit-jupiter]/[class:co.com.nequi.config.ObjectMapperConfigTest]/[method:testObjectMapperBean()]'/>
</tests>
</block>
</coverage>
